version: '3.7'

services:
  jupyterhub:
    build: jupyterhub
    image: jupyterhub_img
    container_name: jupyterhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jupyterhub_data:/srv/jupyterhub
    networks:
      - hale-bopp-network
    environment:
      - DOCKER_JUPYTER_CONTAINER=jupyterlab_img
      - DOCKER_NETWORK_NAME=hale-bopp-network
      - CONTAINER_IDLE_TIMEOUT=120
      - HUB_IP=jupyterhub
      - HOST
    labels:
      - "traefik.http.routers.jupyterhub.rule=Host(`jupyterhub.docker.localhost`)"
    restart: on-failure

  jupyterlab:
    build: jupyterlab
    image: jupyterlab_img
    container_name: jupyterlab
    networks:
      - hale-bopp-network
      - hale-bopp-internal
    command: echo

  reverse-proxy:
    image: traefik:v2.4
    container_name: reverse_proxy
    networks:
      - hale-bopp-network
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure

  # oauth2:
  #   build: oauth2
  #   image: oauth2_img
  #   container_name: oauth2
  #   ports:
  #     - "8888:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - keycloak_data:/srv/jupyterhub
  #   environment:
  #     - KEYCLOAK_USER=admin
  #     - KEYCLOAK_PASSWORD=admin
  #     - HOST
  #   labels:
  #     - "traefik.http.routers.oauth2.rule=Host(`oauth2.docker.localhost`)"
  #   restart: on-failure

  database:
    image: postgres:10.17-alpine
    container_name: db
    environment:
      - USER=super
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=super1123
      - HOST
    volumes:
      - type: volume
        source: database_data
        target: /var/lib/postgresql/data
    networks:
      - hale-bopp-internal


volumes:
  jupyterhub_data:
    driver: local
  keycloak_data:
    driver: local
  database_data:
    driver: local

networks:
  hale-bopp-network:
    external: true
  hale-bopp-internal:
    external: false
